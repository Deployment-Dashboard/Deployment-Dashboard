name: Release

on:
  push:
    tags:
      - 'release/be/*'
      - 'release/fe/*'
      - 'release/full/*'

jobs:
  release_on_tag:
    name: Release on tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Tag release
        id: tag
        run: |
          echo "!"
          echo "[debug] TAG RELEASE"
          if [[ "${{ github.ref_name }}" =~ ^release/(be|fe)/([0-9]+\.[0-9]+\.[0-9]+)$ ]]; then
            APP_TYPE="${BASH_REMATCH[1]}"
            APP_VERSION="${BASH_REMATCH[2]}"

            echo "[debug] type=$APP_TYPE"
            echo "[debug] releaseAppVersion=$APP_VERSION"
            echo "appType=$APP_TYPE" >> "$GITHUB_OUTPUT"
            echo "releaseAppVersion=$APP_VERSION" >> "$GITHUB_OUTPUT"
          else
            echo "[error] tag neodpovida povolenemu formatu"
            exit 1
          fi
        shell: bash

      - name: Set up JDK corretto-21
        if: ${{ steps.tag.outputs.appType == 'be' }}
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: corretto

      - name: Setup Gradle
        if: ${{ steps.tag.outputs.appType == 'be' }}
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582
        with:
          cache-disabled: true

      - name: Build with Gradle
        if: ${{ steps.tag.outputs.appType == 'be' }}
        shell: bash
        run: |
          echo $JAVA_HOME
          echo "Run Gradle build"
          chmod +x gradlew

          ./gradlew clean build
        env:
          releaseAppVersion: ${{ steps.tag.outputs.releaseAppVersion }}
        working-directory: backend/deployment-dashboard

      - name: Build BE Docker image and push
        if: ${{ steps.tag.outputs.appType == 'be' }}
        shell: bash
        run: |
          BE_IMAGE="docker.io/m4rtinkalenda/depdash:${{ steps.tag.outputs.releaseAppVersion }}"
          docker build . -t $BE_IMAGE
          docker tag $BE_IMAGE docker.io/m4rtinkalenda/depdash:latest
          docker login -u m4rtinkalenda -p ${{ secrets.DOCKER_PASS }}
          docker push $BE_IMAGE
          docker push docker.io/m4rtinkalenda/depdash:latest
        working-directory: backend/deployment-dashboard

      - name: Set up Node.js
        if: ${{ steps.tag.outputs.appType == 'fe' }}
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Build FE Docker image and push
        if: ${{ steps.tag.outputs.appType == 'fe' }}
        shell: bash
        run: |
          FE_IMAGE="docker.io/m4rtinkalenda/depdash-ui:${{ steps.tag.outputs.releaseAppVersion }}"
          docker build . -t $FE_IMAGE
          docker tag $FE_IMAGE docker.io/m4rtinkalenda/depdash-ui:latest
          docker login -u m4rtinkalenda -p ${{ secrets.DOCKER_PASS }}
          docker push $FE_IMAGE
          docker push docker.io/m4rtinkalenda/depdash-ui:latest
        working-directory: frontend

      - name: Increment versions in compose files
        id: compose-increment
        shell: bash
        run: |
          if [[ "$appType" == "be" ]]; then
            APP_NAME="deploydash"
            echo "appName=$APP_NAME" >> "$GITHUB_OUTPUT"
          else
            APP_NAME="deploydash-ui"
            echo "appName=$APP_NAME" >> "$GITHUB_OUTPUT"
          fi

          sed -i "s|\(image: docker.io/m4rtinkalenda/${APP_NAME}:\).*|\1${releaseAppVersion}|" "$APP_NAME-compose.yaml"

        env:
          appType: ${{ steps.tag.outputs.appType }}
          releaseAppVersion: ${{ steps.tag.outputs.releaseAppVersion }}
        working-directory: tools/compose

      - name: Commit and push updated compose file
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add "$APP_NAME-compose.yaml"
          git commit -m "chore: bump $APP_NAME compose version to ${{ steps.tag.outputs.releaseAppVersion }}"
          git push
        env:
          appName: ${{ steps.compose-increment.outputs.appType }}
        working-directory: tools/compose

