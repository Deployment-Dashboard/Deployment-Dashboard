name: release

on:
  push:
    tags:
      - '**'
    branches:
      - "action-tests"

jobs:
  release_on_tag:
    name: Release on tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Tag release
        id: tag
        run: |
          echo "!"
          echo "[debug] TAG RELEASE"
          # if [[ "${{ github.ref_name }}" =~ ^release/(be|fe)/([0-9]+\.[0-9]+\.[0-9]+)$ ]]; then
          if [[ "release/be/0.0.1" =~ ^release/(be|fe)/([0-9]+\.[0-9]+\.[0-9]+)$ ]]; then
            APP_TYPE="${BASH_REMATCH[1]}"
            APP_VERSION="${BASH_REMATCH[2]}"

            echo "[debug] type=$APP_TYPE"
            echo "[debug] releaseAppVersion=$APP_VERSION"

            echo "releaseAppVersion=$APP_VERSION" >> "$GITHUB_OUTPUT"
          else
            echo "[error] tag neodpovida povolenemu formatu"
            exit 1
          fi

        shell: bash

      - name: Set up JDK corretto-21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: corretto

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582
        with:
          cache-disabled: true

      - name: build with Gradle
        shell: bash
        run: |
          echo $JAVA_HOME
          echo "Run Gradle build"
          chmod +x gradlew

          ./gradlew clean build
          ls ./build/distributions
        env:
          releaseAppVersion: ${{ steps.tag.outputs.releaseAppVersion }}
        working-directory: backend/deployment-dashboard

      - name: build image and push
        shell: bash
        run: |
          imageName="docker.io/m4rtinkalenda/depdash:${{ steps.tag.outputs.releaseAppVersion }}"
          docker build . -t $imageName
          docker login -u m4rtinkalenda -p ${{ secrets.DOCKER_PASS }}
          docker push $imageName
        working-directory: backend/deployment-dashboard
